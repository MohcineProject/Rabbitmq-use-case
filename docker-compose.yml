
services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq
    build:
      context: services/rabbitmqService
      dockerfile: dockerfile
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - ./services/rabbitmqService/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 1m30s
      timeout: 20s
      retries: 5
      start_period: 1m
    environment:
      - RABBITMQ_NODENAME=rabbit@rabbitmq
      - RABBITMQ_ERLANG_COOKIE=secretcookie
    networks:
      - docker_network

  rabbitmq-duplicate-1:
    container_name: rabbitmq-duplicate-1
    image: rabbitmq
    build:
      context: services/rabbitmqService
      dockerfile: dockerfile
    ports:
    - "15679:15672" 
    volumes:
      - ./services/rabbitmqService/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 1m30s
      timeout: 20s
      retries: 5
      start_period: 1m
    environment:
      - RABBITMQ_NODENAME=rabbit@rabbitmq-duplicate-1
      - RABBITMQ_ERLANG_COOKIE=secretcookie
    networks:
      - docker_network
    
  rabbitmq-duplicate-2:
    container_name: rabbitmq-duplicate-2
    image: rabbitmq
    build:
      context: services/rabbitmqService
      dockerfile: dockerfile
    environment:
      - RABBITMQ_NODENAME=rabbit@rabbitmq-duplicate-2
      - RABBITMQ_ERLANG_COOKIE=secretcookie
    volumes:
      - ./services/rabbitmqService/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 1m30s
      timeout: 20s
      retries: 5
      start_period: 1m
    networks:
      - docker_network



  order-service: 
    container_name: order-service
    image: order-service
    build: 
      context: services/orderService
      dockerfile: dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - docker_network
    environment:
      - RABBITMQ_NODES=rabbitmq,rabbitmq-duplicate-1,rabbitmq-duplicate-2
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=order
      - RABBITMQ_PASSWORD=order
    deploy:
      restart_policy: 
        condition: on-failure

  inventory-service: 
    image: inventory-service
    build: 
      context: services/inventoryService
      dockerfile: dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
      order-service:
        condition: service_started
    networks:
      - docker_network
    environment:
      - RABBITMQ_NODES=rabbitmq,rabbitmq-duplicate-1,rabbitmq-duplicate-2
      - RABBITMQ_PORT=5672
      - RABBITMQ_USERNAME=order
      - RABBITMQ_PASSWORD=order
    deploy:
      replicas: 2 
      restart_policy:
        condition: on-failure

  
networks: 
  docker_network:
    driver: bridge
